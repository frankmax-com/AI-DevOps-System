# Horizontal Pod Autoscaler for Controller Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: controller-hpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: controller
    service: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: controller-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
---
# Horizontal Pod Autoscaler for Azure DevOps Governance
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: azure-devops-governance-hpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: azure-devops-governance-deployment
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
# Horizontal Pod Autoscaler for GitHub Governance
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: github-governance-hpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: github-governance-deployment
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
# Horizontal Pod Autoscaler for Database Governance
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: database-governance-hpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: database-governance-deployment
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
# Horizontal Pod Autoscaler for AI Provider
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-provider-hpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: ai-provider
    service: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-provider-deployment
  minReplicas: 2
  maxReplicas: 12
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60  # Lower threshold for AI workloads
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  - type: Pods
    pods:
      metric:
        name: ai_requests_per_second
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # Longer stabilization for AI workloads
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 200
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
---
# Pod Disruption Budget for Controller Service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: controller-pdb
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: controller
    service: pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ai-devops
      component: controller
      service: controller
---
# Pod Disruption Budget for Azure DevOps Governance
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: azure-devops-governance-pdb
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-devops
      component: governance
      service: azure-devops-governance
---
# Pod Disruption Budget for GitHub Governance
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: github-governance-pdb
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-devops
      component: governance
      service: github-governance
---
# Pod Disruption Budget for Database Governance
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: database-governance-pdb
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: governance
    service: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-devops
      component: governance
      service: database-governance
---
# Pod Disruption Budget for AI Provider
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-provider-pdb
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: ai-provider
    service: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ai-devops
      component: ai-provider
      service: ai-provider
---
# Vertical Pod Autoscaler for Database Services (Optional)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: postgres-vpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: database
    service: vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: postgres-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: postgres
      maxAllowed:
        cpu: "2"
        memory: "4Gi"
      minAllowed:
        cpu: "250m"
        memory: "512Mi"
      controlledResources: ["cpu", "memory"]
---
# Vertical Pod Autoscaler for MongoDB
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: mongodb-vpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: database
    service: vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mongodb-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: mongodb
      maxAllowed:
        cpu: "2"
        memory: "4Gi"
      minAllowed:
        cpu: "250m"
        memory: "512Mi"
      controlledResources: ["cpu", "memory"]
---
# Vertical Pod Autoscaler for Redis
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: redis-vpa
  namespace: ai-devops-system
  labels:
    app: ai-devops
    component: cache
    service: vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: redis
      maxAllowed:
        cpu: "1"
        memory: "2Gi"
      minAllowed:
        cpu: "100m"
        memory: "256Mi"
      controlledResources: ["cpu", "memory"]
